#!/bin/bash
# Called by "git commit" with no arguments.  The hook should
# exit with non-zero status after issuing an appropriate message if
# it wants to stop the commit.

REVISION=$(git log --pretty=format:'%h' -n 1)
FILE_LIST=$(git diff --diff-filter=d --cached --name-only | grep -E '\.(js|jsx|ts|tsx|vue)$')
FILE_COUNT=0

if [ -z "$FILE_LIST"]; then
    FILE_COUNT=${#FILE_LIST[@]}
fi

echo $FILE_LIST
echo $FILE_COUNT

FILE_STRING='file'

if [ "$FILE_COUNT" -gt 1 ]; then
    FILE_STRING='files'
fi

ESLINT=common/temp/node_modules/.bin/eslint
PRETTIER=common/temp/node_modules/.bin/pretty-quick

BOLD=`tput bold`
NORMAL=`tput sgr0`

echo --------------------------------------------
echo Starting Git hook: pre-commit
echo --------------------------------------------

echo Running Prettier

if [ -f $PRETTIER ]; then
  $PRETTIER
else
  echo "\nError running PRETTIER: $PRETTIER\n"
fi

echo Running ESLint

if [ -f $ESLINT ]; then
    echo "üîç Finding changed files since ${BOLD}git${NORMAL} revision ${BOLD}$REVISION${NORMAL}."
    echo "üéØ Found ${BOLD}${FILE_COUNT}${NORMAL} changed $FILE_STRING."

    if [ "$FILE_COUNT" -gt 0 ]; then
        $ESLINT ${FILE_LIST[*]} "$@"
    fi

    if [ $? -ne 0 ]; then
        echo "‚õîÔ∏è  Check failed, please fix the above issues before committing."
    else
        echo "‚úÖ  Everything is awesome!"
    fi
else
  echo "\nError running ESLINT: $ESLINT\n"
fi

# if [ -f $ESLINT ]; then
#   echo Invoking $ESLINT on $APPS_RUN_GENERATOR
#   echo `$ESLINT "$APPS_RUN_GENERATOR" --cache --fix`

#   echo Invoking $ESLINT on $TOOLS_GAME_MECHANICS
#   echo `$ESLINT "$TOOLS_GAME_MECHANICS" --cache --fix`
# else
#   echo Error running ESLINT: $ESLINT
# fi

echo --------------------------------------------
echo Finished Git hook: pre-commit
echo --------------------------------------------